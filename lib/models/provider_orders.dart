import 'package:flutter/foundation.dart';
import 'package:shop_app/models/provider_cart.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class OrderItem {
  final String id;
  final double amount;
  final List<CartItem> products;
  final DateTime dateTime;

  OrderItem({
    @required this.id,
    @required this.amount,
    @required this.products,
    @required this.dateTime,
  });
}

class Orders with ChangeNotifier {
  List<OrderItem> _orders = [];

  List<OrderItem> get orders {
    return [..._orders];
  }

  Future<void> fetchNSetOrders() async {
    final String url =
        'https://shop-app-79ea9-default-rtdb.europe-west1.firebasedatabase.app/orders.json';
    List<OrderItem> loadedOrders = [];
    final response = await http.get(Uri.parse(url));
    final extractedData = json.decode(response.body) as Map<String, dynamic>;
    if (extractedData == null) {
      return;
    }
    extractedData.forEach(
      (orderId, orderData) => loadedOrders.add(
        OrderItem(
          id: orderId,
          amount: orderData['amount'],
          products: (orderData['products'] as List<dynamic>)
              .map(
                (product) => CartItem(
                  id: product['id'],
                  title: product['title'],
                  quantity: product['quantity'],
                  price: product['price'],
                ),
              )
              .toList(),
          dateTime: DateTime.parse(
            orderData['dateTime'],
          ),
        ),
      ),
    );
    _orders = loadedOrders.reversed.toList();
    notifyListeners();
  }

  Future<void> addOrders(List<CartItem> cartProducts, double total) async {
    const String url =
        'https://shop-app-79ea9-default-rtdb.europe-west1.firebasedatabase.app/orders.json';

    //so we can be consistent about time in both http request and app memory
    final timeStamp = DateTime.now();

    try {
      final response = await http.post(
        Uri.parse(url),
        body: json.encode(
          {
            'amount': total,
            'dateTime': timeStamp.toIso8601String(), //can be decoded back
            // to DateTime Object
            'products': cartProducts
                .map(
                  (cp) => {
                    'id': cp.id,
                    'title': cp.title,
                    'quantity': cp.quantity,
                    'price': cp.price,
                  },
                )
                .toList(),
          },
        ),
      );

      //add the latest order items to the top of the list / beginning
      // of the list
      _orders.insert(
        0,
        OrderItem(
          //adding the same id of firebase autoGenerated ID to the app memory
          id: json.decode(response.body)['name'],
          amount: total,
          dateTime: timeStamp,
          products: cartProducts,
        ),
      );
    } catch (error) {
      //error handling here
    }

    notifyListeners();
  }
}
